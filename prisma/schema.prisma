generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model order_items {
  id                   Int       @id @default(autoincrement())
  order_id             Int
  product_id           String    @db.VarChar(255)
  product_display_name String?   @db.VarChar(255)
  quantity             Int
  unit_price           Decimal   @db.Decimal(10, 2)
  currency             String    @db.VarChar(10)
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)
  quantity_from_stock  Int?      @default(0)
  quantity_preorder    Int?      @default(0)
  orders               orders    @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model orders {
  id                      Int           @id @default(autoincrement())
  product_id              String        @db.VarChar(255)
  customer_email          String        @db.VarChar(255)
  customer_name           String?       @db.VarChar(255)
  quantity                Int?          @default(1)
  order_type              String        @db.VarChar(50)
  payment_status          String?       @default("pending") @db.VarChar(50)
  payment_id              String?       @db.VarChar(255)
  amount_paid             Decimal?      @db.Decimal(10, 2)
  currency                String?       @default("AED") @db.VarChar(10)
  created_at              DateTime?     @default(now()) @db.Timestamptz(6)
  quantity_ordered        Int?          @default(1)
  quantity_in_stock       Int?          @default(0)
  quantity_preorder       Int?          @default(0)
  order_status            String?       @default("paid") @db.VarChar(50)
  shipping_address        String?
  phone_number            String?       @db.VarChar(50)
  notes                   String?
  total_amount            Decimal?      @db.Decimal(10, 2)
  shipping_status         String?       @default("pending") @db.VarChar(50)
  tracking_number         String?       @db.VarChar(255)
  shipped_date            DateTime?     @db.Timestamptz(6)
  delivered_date          DateTime?     @db.Timestamptz(6)
  shipping_carrier        String?       @db.VarChar(100)
  estimated_delivery_date DateTime?     @db.Date
  updated_at              DateTime?     @default(now()) @db.Timestamptz(6)
  order_items             order_items[]

  @@index([created_at], map: "idx_orders_created_at")
  @@index([payment_status], map: "idx_orders_payment_status")
  @@index([product_id], map: "idx_orders_product_id")
}

model price_history {
  id            Int       @id @default(autoincrement())
  product_id    String    @db.VarChar(255)
  old_price_aed Decimal?  @db.Decimal(10, 2)
  new_price_aed Decimal?  @db.Decimal(10, 2)
  old_price_gbp Decimal?  @db.Decimal(10, 2)
  new_price_gbp Decimal?  @db.Decimal(10, 2)
  change_reason String?
  changed_by    String?   @default("admin") @db.VarChar(255)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
}

model products {
  product_code        String?         @unique @db.VarChar(255)
  name                String          @db.VarChar(255)
  description         String?
  category            String?         @db.VarChar(100)
  created_at          DateTime?       @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?       @default(now()) @db.Timestamptz(6)
  quantity_available  Int?            @default(0)
  preorder_quantity   Int?            @default(0)
  price_aed           Decimal?        @db.Decimal(10, 2)
  price_gbp           Decimal?        @db.Decimal(10, 2)
  pre_order_date      DateTime?       @db.Date
  id                  String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subtitle            String?         @db.VarChar(255)
  materials           Json?           @default("[]")
  essences            Json?           @default("[]")
  colors              Json?           @default("[]")
  total_quantity      Int?
  preorder_ready_date DateTime?       @db.Date
  status              product_status? @default(active)
  image_urls          Json?           @default("[]")
}

model subscribers {
  id         Int       @id @default(autoincrement())
  email      String    @unique @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  status     String?   @default("active") @db.VarChar(50)
}

enum product_status {
  active
  inactive
  out_of_stock @map("out-of-stock")
  pre_order    @map("pre-order")
}
